const E="ATTRIBUTE_KEY_REQUIRED",_="FILTER_OPERATOR_REQUIRED",a="VALUE_REQUIRED",i="VALUE_MUST_BE_BETWEEN_1_AND_998",c="ACTION_PARAMETERS_REQUIRED",R="ATLEAST_ONE_CONDITION_REQUIRED",A="ATLEAST_ONE_ACTION_REQUIRED",s=r=>r.attribute_key?r.filter_operator?r.filter_operator!=="is_present"&&r.filter_operator!=="is_not_present"&&(!r.values||Array.isArray(r.values)&&r.values.length===0)?a:r.filter_operator==="days_before"&&(parseInt(r.values,10)<=0||parseInt(r.values,10)>=999)?i:null:_:E,U=r=>{const n={};return r.forEach((e,t)=>{const o=s(e);o&&(n[`filter_${t}`]=o)}),n},T=r=>{const n={};return["name","description","event_name"].forEach(t=>{r[t]||(n[t]=`${t.charAt(0).toUpperCase()+t.slice(1)} is required`)}),n},u=r=>{const n={};return!r||r.length===0?(n.conditions=R,n):(r.forEach((e,t)=>{const o=s(e);o&&(n[`condition_${t}`]=o)}),n)},I=r=>!["mute_conversation","snooze_conversation","resolve_conversation","remove_assigned_team"].includes(r.action_name)&&(!r.action_params||r.action_params.length===0)?c:null,l=r=>!r||r.length===0?{actions:A}:r.reduce((n,e,t)=>{const o=I(e);return o&&(n[`action_${t}`]=o),n},{}),v=r=>{const n=T(r),e=u(r.conditions),t=l(r.actions);return{...n,...e,...t}};export{v as a,l as b,U as v};
