import{u as f,a as _}from"./index-BaHWIRRA.js";import{r as c,w as h,P as O,o as T,n as R,e as a,_ as E,u as m}from"./_plugin-vue_export-helper-CvYNw_mv.js";import{_ as u}from"./ReportMetricCard-nHZIFoTF.js";import{ax as d,av as S}from"./dashboard-CGLIihvy.js";import{R as B}from"./FilterSelector-B06zYLqE.js";import{G as y}from"./constants-CvJgIWgr.js";import{R as A}from"./ReportContainer-Dd_ptqR_.js";import"./globalConfig-DaGjiImb.js";import"./index-Y4OjWrJ-.js";import"./_commonjsHelpers-BosuxZz1.js";import"./axios-CCb-kr4I.js";import"./mutationHelpers-3VTcoJiD.js";import"./vue-router-CNCrM2WK.js";import"./index-BP-sUqpX.js";import"./index-DaWXXnfb.js";import"./globalConfigMixin-BNbqaRx5.js";import"./timeHelper-BT38nsET.js";import"./Spinner-B-aSVz3z.js";import"./Thumbnail-DLjRBBx8.js";import"./index-BO4rcqbh.js";import"./utils.esm-CA3tRshB.js";import"./exports-CsC-x4VI.js";import"./index-C2DForDf.js";import"./useKeyboardNavigableList-Cfstgo2Q.js";import"./helper-DcGaBm2u.js";import"./DashboardIcon-CPXNa31t.js";import"./AudioNotificationHelper-CDrFIep2.js";import"./Icon-Dtj3LCzD.js";import"./Validators-eX6_8wdj.js";import"./vue-dompurify-html-DZ5r8uTJ.js";import"./module-CGzIBJZi.js";import"./DateRangePicker-BS8Sn4en.js";import"./index.es-CaHyKWHu.js";import"./DateHelper-D7GM2F2-.js";import"./index-CbMJaKeB.js";import"./BarChart-Cyq4Hy7M.js";const P={class:"flex flex-wrap mx-0 bg-white dark:bg-slate-800 rounded-[4px] p-4 mb-5 border border-solid border-slate-75 dark:border-slate-700"},b={__name:"BotMetrics",props:{filters:{type:Object,required:!0}},setup(r){const e=r,o=c("0"),s=c("0"),i=c("0"),l=c("0"),n=t=>t?`${t}%`:"--",p=()=>{!e.filters.to||!e.filters.from||d.getBotMetrics(e.filters).then(t=>{o.value=t.data.conversation_count.toLocaleString(),s.value=t.data.message_count.toLocaleString(),i.value=t.data.resolution_rate.toString(),l.value=t.data.handoff_rate.toString()})};return h(()=>e.filters,p,{deep:!0}),O(p),(t,g)=>(T(),R("div",P,[a(u,{label:t.$t("BOT_REPORTS.METRIC.TOTAL_CONVERSATIONS.LABEL"),"info-text":t.$t("BOT_REPORTS.METRIC.TOTAL_CONVERSATIONS.TOOLTIP"),value:o.value,class:"flex-1"},null,8,["label","info-text","value"]),a(u,{label:t.$t("BOT_REPORTS.METRIC.TOTAL_RESPONSES.LABEL"),"info-text":t.$t("BOT_REPORTS.METRIC.TOTAL_RESPONSES.TOOLTIP"),value:s.value,class:"flex-1"},null,8,["label","info-text","value"]),a(u,{label:t.$t("BOT_REPORTS.METRIC.RESOLUTION_RATE.LABEL"),"info-text":t.$t("BOT_REPORTS.METRIC.RESOLUTION_RATE.TOOLTIP"),value:n(i.value),class:"flex-1"},null,8,["label","info-text","value"]),a(u,{label:t.$t("BOT_REPORTS.METRIC.HANDOFF_RATE.LABEL"),"info-text":t.$t("BOT_REPORTS.METRIC.HANDOFF_RATE.TOOLTIP"),value:n(l.value),class:"flex-1"},null,8,["label","info-text","value"])]))}},C={name:"BotReports",components:{BotMetrics:b,ReportFilterSelector:B,ReportContainer:A},data(){return{from:0,to:0,groupBy:y[1],reportKeys:{BOT_RESOLUTION_COUNT:"bot_resolutions_count",BOT_HANDOFF_COUNT:"bot_handoffs_count"},businessHours:!1}},computed:{requestPayload(){return{from:this.from,to:this.to}}},methods:{fetchAllData(){this.fetchBotSummary(),this.fetchChartData()},fetchBotSummary(){try{this.$store.dispatch("fetchBotSummary",this.getRequestPayload())}catch{f(this.$t("REPORT.SUMMARY_FETCHING_FAILED"))}},fetchChartData(){Object.keys(this.reportKeys).forEach(async r=>{try{await this.$store.dispatch("fetchAccountReport",{metric:this.reportKeys[r],...this.getRequestPayload()})}catch{f(this.$t("REPORT.DATA_FETCHING_FAILED"))}})},getRequestPayload(){const{from:r,to:e,groupBy:o,businessHours:s}=this;return{from:r,to:e,groupBy:o==null?void 0:o.period,businessHours:s}},onFilterChange({from:r,to:e,groupBy:o,businessHours:s}){this.from=r,this.to=e,this.groupBy=o,this.businessHours=s,this.fetchAllData(),_(S.FILTER_REPORT,{filterValue:{from:r,to:e,groupBy:o,businessHours:s},reportType:"bots"})}}},L={class:"flex-1 p-4 overflow-auto"};function I(r,e,o,s,i,l){const n=m("ReportFilterSelector"),p=m("BotMetrics"),t=m("ReportContainer");return T(),R("div",L,[a(n,{"show-agents-filter":!1,"show-group-by-filter":"","show-business-hours-switch":!1,onFilterChange:l.onFilterChange},null,8,["onFilterChange"]),a(p,{filters:l.requestPayload},null,8,["filters"]),a(t,{"account-summary-key":"getBotSummary","group-by":i.groupBy,"report-keys":i.reportKeys},null,8,["group-by","report-keys"])])}const ft=E(C,[["render",I]]);export{ft as default};
